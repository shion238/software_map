# ride_tracker/app.py
from flask import Flask, render_template, request, redirect, url_for, jsonify
import sqlite3
from datetime import datetime
import os

app = Flask(__name__)

DB_FILE = os.path.join(os.path.dirname(__file__), 'instance/ride_tracker.sqlite')

def init_db():
    os.makedirs(os.path.dirname(DB_FILE), exist_ok=True)
    conn = sqlite3.connect(DB_FILE)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS rides (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            vehicle TEXT,
            start TEXT,
            end TEXT,
            distance REAL,
            avg_speed REAL,
            duration TEXT,
            fuel_efficiency REAL,
            created_at TEXT
        )
    ''')
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS vehicles (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name TEXT,
            type TEXT,
            displacement INTEGER,
            fuel_efficiency REAL
        )
    ''')
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS destinations (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            label TEXT,
            location TEXT
        )
    ''')
    conn.commit()
    conn.close()

@app.route('/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
        data = (
            request.form['vehicle'],
            request.form['start'],
            request.form['end'],
            float(request.form['distance']),
            float(request.form['avg_speed']),
            request.form['duration'],
            float(request.form['fuel_efficiency']),
            datetime.now().isoformat()
        )
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        cursor.execute('INSERT INTO rides VALUES (NULL,?,?,?,?,?,?,?,?)', data)
        conn.commit()
        conn.close()
        return redirect(url_for('index'))

    conn = sqlite3.connect(DB_FILE)
    cursor = conn.cursor()
    cursor.execute('SELECT * FROM rides ORDER BY created_at DESC')
    rides = cursor.fetchall()
    conn.close()
    return render_template('index.html', rides=rides)

@app.route('/vehicles', methods=['GET', 'POST'])
def manage_vehicles():
    conn = sqlite3.connect(DB_FILE)
    cursor = conn.cursor()
    if request.method == 'POST':
        cursor.execute('INSERT INTO vehicles (name, type, displacement, fuel_efficiency) VALUES (?, ?, ?, ?)', (
            request.form['name'],
            request.form['type'],
            request.form['displacement'],
            request.form['fuel_efficiency']
        ))
        conn.commit()
        return redirect(url_for('manage_vehicles'))
    cursor.execute('SELECT * FROM vehicles')
    vehicles = cursor.fetchall()
    conn.close()
    return render_template('vehicles.html', vehicles=vehicles)

@app.route('/destinations', methods=['GET', 'POST'])
def save_destinations():
    conn = sqlite3.connect(DB_FILE)
    cursor = conn.cursor()
    if request.method == 'POST':
        cursor.execute('INSERT INTO destinations (label, location) VALUES (?, ?)', (
            request.form['label'],
            request.form['location']
        ))
        conn.commit()
        return redirect(url_for('save_destinations'))
    cursor.execute('SELECT * FROM destinations')
    destinations = cursor.fetchall()
    conn.close()
    return render_template('destinations.html', destinations=destinations)

@app.route('/map')
def map_view():
    return render_template('map.html')

if __name__ == '__main__':
    init_db()
    app.run(debug=True)
